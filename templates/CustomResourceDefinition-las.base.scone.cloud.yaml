---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: {{.Release.Namespace}}/scone-serving-cert
    controller-gen.kubebuilder.io/version: v0.9.0
  name: las.base.scone.cloud
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: scone-webhook-service
          namespace: {{.Release.Namespace}}
          path: /convert
      conversionReviewVersions:
      - v1
  group: base.scone.cloud
  names:
    kind: LAS
    listKind: LASList
    plural: las
    shortNames:
    - las
    singular: las
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: The state of this LAS
      jsonPath: .status.state
      name: STATUS
      type: string
    - jsonPath: .status.numberAvailable
      name: AVAILABLE
      type: string
    - jsonPath: .status.desiredNumberScheduled
      name: DESIRED
      type: string
    - jsonPath: .status.version
      name: VERSION
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    - jsonPath: .status.nodes
      name: NODES
      priority: 1
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: LAS is the Schema for the las API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: LASSpec defines the desired state of LAS
            properties:
              autoUpdate:
                description: If set to `true`, the controller will check the registry periodically for image digest changes and trigger rolling updates of the LAS pods. This assumes that the image has something like semantic versioning in place.
                type: boolean
              hostPort:
                description: Containers must forward attestation requests to LAS instances collocated in the same node, but this requirement is not achievable through a standard Kubernetes Service abstraction. For this reason, we rely on hostPorts to expose LAS, and assume that the pods will use the `status.hostIP` (provided by the Kubernetes API) as SCONE_LAS_ADDR.
                format: int32
                type: integer
              image:
                description: Image for LAS containers. This reflects directly on the underlying DaemonSet.
                type: string
              imagePullPolicy:
                description: ImagePullPolicy for LAS containers. This reflects directly on the underlying DaemonSet.
                type: string
              imagePullSecrets:
                description: 'ImagePullSecrets for LAS containers. This reflects directly on the underlying DaemonSet. NOTE: the current implementation considers only the first valid secret, even if multiple are supported.'
                items:
                  description: LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                type: array
              namespace:
                description: Target namespace to deploy LAS pods. Even though LAS itself is a cluster resource, we require a target namespace to deploy the LAS pods to. Defaults to "scone".
                type: string
              nodeSelector:
                additionalProperties:
                  type: string
                description: 'NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node''s labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                type: object
              resources:
                description: 'Compute Resources required by this container. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
            required:
            - image
            type: object
          status:
            description: LASStatus defines the observed state of LAS
            properties:
              desiredNumberScheduled:
                description: DesiredNumberScheduled is the desired amount of LAS pods for the cluster.
                format: int32
                type: integer
              lasReplicaAlert:
                description: the number of the desired replicas not running
                format: int32
                minimum: -1
                type: integer
              nodes:
                additionalProperties:
                  description: LASNode defines one LAS instance mapped to a cluster node.
                  properties:
                    hasDCAPQuote:
                      description: HasDCAPQuote indicates whether the node supports DCAP quotes
                      type: boolean
                    hasEPIDQuote:
                      description: HasEPIDQuote indicates whether the node supports EPID quotes
                      type: boolean
                    isReady:
                      description: IsReady indicates whether the LAS API started listening at the configured port.
                      type: boolean
                    lastComputedAt:
                      description: LastComputedAt stores the Unix timestamp of when the LAS pod logs were inspected by the Reconciler to populate a `LASNode` struct. It is useful to avoid checking the LAS pod logs unnecessarily, since quote types and QE public keys will not change over the LAS pod lifetime.
                      format: int64
                      type: integer
                    lastRunningStartedAt:
                      description: LastRunningStartedAt stores the Unix timestamp of when the LAS pod has started. This value is fetched from the Pod.Status struct. It is useful to avoid checking the LAS pod logs unnecessarily, since quote types and QE public keys will not change over the LAS pod lifetime.
                      format: int64
                      type: integer
                    publicKey:
                      description: PublicKey is the public key of the quoting enclave, as retrieve from the LAS pod log
                      type: string
                  required:
                  - hasDCAPQuote
                  - hasEPIDQuote
                  - isReady
                  - lastComputedAt
                  - lastRunningStartedAt
                  - publicKey
                  type: object
                description: Nodes stores more details about each cluster node that supports local attestation.
                type: object
              numberAvailable:
                description: NumberAvailable is the amount of nodes that have a LAS pod in Ready state.
                format: int32
                type: integer
              state:
                description: The state of the LAS
                enum:
                - HEALTHY
                - PENDING
                - UNHEALTHY
                type: string
              version:
                description: Version is the actual LAS version observed in the LAS pods.
                type: string
            required:
            - desiredNumberScheduled
            - nodes
            - numberAvailable
            - state
            - version
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}